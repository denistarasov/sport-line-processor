// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        (unknown)
// source: sportlines.proto

package main

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SportLinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportNames   []string `protobuf:"bytes,1,rep,name=sportNames,proto3" json:"sportNames,omitempty"`
	TimeInterval int32    `protobuf:"varint,2,opt,name=timeInterval,proto3" json:"timeInterval,omitempty"`
}

func (x *SportLinesRequest) Reset() {
	*x = SportLinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sportlines_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportLinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportLinesRequest) ProtoMessage() {}

func (x *SportLinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sportlines_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportLinesRequest.ProtoReflect.Descriptor instead.
func (*SportLinesRequest) Descriptor() ([]byte, []int) {
	return file_sportlines_proto_rawDescGZIP(), []int{0}
}

func (x *SportLinesRequest) GetSportNames() []string {
	if x != nil {
		return x.SportNames
	}
	return nil
}

func (x *SportLinesRequest) GetTimeInterval() int32 {
	if x != nil {
		return x.TimeInterval
	}
	return 0
}

type SportLinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportNameToLine map[string]float64 `protobuf:"bytes,1,rep,name=sportNameToLine,proto3" json:"sportNameToLine,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *SportLinesResponse) Reset() {
	*x = SportLinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sportlines_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SportLinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SportLinesResponse) ProtoMessage() {}

func (x *SportLinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sportlines_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SportLinesResponse.ProtoReflect.Descriptor instead.
func (*SportLinesResponse) Descriptor() ([]byte, []int) {
	return file_sportlines_proto_rawDescGZIP(), []int{1}
}

func (x *SportLinesResponse) GetSportNameToLine() map[string]float64 {
	if x != nil {
		return x.SportNameToLine
	}
	return nil
}

var File_sportlines_proto protoreflect.FileDescriptor

var file_sportlines_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0x57, 0x0a, 0x11,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0f,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4c,
	0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x1a, 0x42, 0x0a, 0x14, 0x53, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x6d, 0x0a,
	0x11, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x58, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x6e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sportlines_proto_rawDescOnce sync.Once
	file_sportlines_proto_rawDescData = file_sportlines_proto_rawDesc
)

func file_sportlines_proto_rawDescGZIP() []byte {
	file_sportlines_proto_rawDescOnce.Do(func() {
		file_sportlines_proto_rawDescData = protoimpl.X.CompressGZIP(file_sportlines_proto_rawDescData)
	})
	return file_sportlines_proto_rawDescData
}

var file_sportlines_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sportlines_proto_goTypes = []interface{}{
	(*SportLinesRequest)(nil),  // 0: protobuf.SportLinesRequest
	(*SportLinesResponse)(nil), // 1: protobuf.SportLinesResponse
	nil,                        // 2: protobuf.SportLinesResponse.SportNameToLineEntry
}
var file_sportlines_proto_depIdxs = []int32{
	2, // 0: protobuf.SportLinesResponse.sportNameToLine:type_name -> protobuf.SportLinesResponse.SportNameToLineEntry
	0, // 1: protobuf.SportLinesService.subscribeOnSportLines:input_type -> protobuf.SportLinesRequest
	1, // 2: protobuf.SportLinesService.subscribeOnSportLines:output_type -> protobuf.SportLinesResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sportlines_proto_init() }
func file_sportlines_proto_init() {
	if File_sportlines_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sportlines_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportLinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sportlines_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SportLinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sportlines_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sportlines_proto_goTypes,
		DependencyIndexes: file_sportlines_proto_depIdxs,
		MessageInfos:      file_sportlines_proto_msgTypes,
	}.Build()
	File_sportlines_proto = out.File
	file_sportlines_proto_rawDesc = nil
	file_sportlines_proto_goTypes = nil
	file_sportlines_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SportLinesServiceClient is the client API for SportLinesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SportLinesServiceClient interface {
	SubscribeOnSportLines(ctx context.Context, opts ...grpc.CallOption) (SportLinesService_SubscribeOnSportLinesClient, error)
}

type sportLinesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSportLinesServiceClient(cc grpc.ClientConnInterface) SportLinesServiceClient {
	return &sportLinesServiceClient{cc}
}

func (c *sportLinesServiceClient) SubscribeOnSportLines(ctx context.Context, opts ...grpc.CallOption) (SportLinesService_SubscribeOnSportLinesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SportLinesService_serviceDesc.Streams[0], "/protobuf.SportLinesService/subscribeOnSportLines", opts...)
	if err != nil {
		return nil, err
	}
	x := &sportLinesServiceSubscribeOnSportLinesClient{stream}
	return x, nil
}

type SportLinesService_SubscribeOnSportLinesClient interface {
	Send(*SportLinesRequest) error
	Recv() (*SportLinesResponse, error)
	grpc.ClientStream
}

type sportLinesServiceSubscribeOnSportLinesClient struct {
	grpc.ClientStream
}

func (x *sportLinesServiceSubscribeOnSportLinesClient) Send(m *SportLinesRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sportLinesServiceSubscribeOnSportLinesClient) Recv() (*SportLinesResponse, error) {
	m := new(SportLinesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SportLinesServiceServer is the server API for SportLinesService service.
type SportLinesServiceServer interface {
	SubscribeOnSportLines(SportLinesService_SubscribeOnSportLinesServer) error
}

// UnimplementedSportLinesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSportLinesServiceServer struct {
}

func (*UnimplementedSportLinesServiceServer) SubscribeOnSportLines(SportLinesService_SubscribeOnSportLinesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeOnSportLines not implemented")
}

func RegisterSportLinesServiceServer(s *grpc.Server, srv SportLinesServiceServer) {
	s.RegisterService(&_SportLinesService_serviceDesc, srv)
}

func _SportLinesService_SubscribeOnSportLines_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SportLinesServiceServer).SubscribeOnSportLines(&sportLinesServiceSubscribeOnSportLinesServer{stream})
}

type SportLinesService_SubscribeOnSportLinesServer interface {
	Send(*SportLinesResponse) error
	Recv() (*SportLinesRequest, error)
	grpc.ServerStream
}

type sportLinesServiceSubscribeOnSportLinesServer struct {
	grpc.ServerStream
}

func (x *sportLinesServiceSubscribeOnSportLinesServer) Send(m *SportLinesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sportLinesServiceSubscribeOnSportLinesServer) Recv() (*SportLinesRequest, error) {
	m := new(SportLinesRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SportLinesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.SportLinesService",
	HandlerType: (*SportLinesServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "subscribeOnSportLines",
			Handler:       _SportLinesService_SubscribeOnSportLines_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "sportlines.proto",
}
